{"version":3,"sources":["Types/index.ts","Recoil/atom/index.ts","Components/ModelsForm.tsx","Components/ModelsFormList.tsx","Components/ModelsTab.tsx","Components/ObjectsForm.tsx","Components/ObjectsTab.tsx","Components/OutputTab.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["InputTypes","modelsListState","atom","key","default","objectsListState","Option","Select","ModelsForm","props","useRecoilState","modelsList","setModelsList","className","placeholder","value","formIndex","contents","modelIndex","onChange","e","prev","prevContent","slice","concat","name","id","target","isArray","type","length","defaultValue","string","val","number","boolean","map","_","i","checked","danger","onClick","CloseOutlined","ModelsFormList","useState","modelNameState","setModelNameState","SwitchModelName","onBlur","blurModelNameInput","PlusOutlined","undefined","find","v","ModelsTab","uuidv4","ObjectsForm","useRecoilValue","objectsList","setObjectsList","objectNameState","setObjectNameState","SwitchObjectName","modelId","model","object","push","ArraySize","min","Number","prevModel","addObj","Array","forEach","changeArraySize","InputField","ifProps","index","toString","changeStringInputValue","changeNumberInputValue","defaultChecked","changeBooleanInputValue","matchList","filter","changeCustomInputValue","ObjectsTab","TextArea","Input","OutputTab","outputObj","setOutputObj","selectedObj","setSelectedObj","indentCount","searchObject","obj","addCurlyBracesOpen","addIndent","addKey","addString","addComma","addReturn","addNumber","addBoolean","tmp","finded","v2","addSquireBracketsOpen","console","log","addSquireBracketsClose","addCurlyBracesClose","addBracketsOpen","bracket","addBracketsClose","TabPane","Tabs","App","defaultActiveKey","tab","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.85075511.chunk.js","sourcesContent":["export enum InputTypes {\r\n  string = \"String\",\r\n  number = \"Number\",\r\n  boolean = \"Boolean\",\r\n}\r\n\r\nexport interface IModelsElem {\r\n  key: string;\r\n  isArray: boolean;\r\n  type: InputTypes | string;\r\n}\r\n\r\nexport interface IModelsListBase {\r\n  name: string;\r\n  id: string;\r\n}\r\n\r\nexport interface IModelsList extends IModelsListBase {\r\n  contents: IModelsElem[];\r\n}\r\n\r\nexport interface IObjectsElem extends IModelsElem {\r\n  // key: string;\r\n  // isArray: boolean;\r\n  // type: InputTypes | string;\r\n  value: Array<string | number | boolean>;\r\n}\r\n\r\nexport interface IObjectsList extends IModelsListBase {\r\n  modelId: string;\r\n  contents: IObjectsElem[];\r\n}","import { atom } from 'recoil';\r\nimport { IModelsList, IObjectsList } from '../../Types';\r\n\r\nexport const modelsListState = atom<IModelsList[]>({\r\n  key: \"modelsList\",\r\n  default: [],\r\n});\r\n\r\nexport const objectsListState = atom<IObjectsList[]>({\r\n  key: \"objectsList\",\r\n  default: [],\r\n})","import React from 'react';\r\nimport { Button, Checkbox, Input, Select } from 'antd';\r\nimport { InputTypes } from '../Types';\r\nimport '../Styles/models-form.scss';\r\nimport { CloseOutlined } from '@ant-design/icons';\r\nimport { useRecoilState } from 'recoil';\r\nimport { modelsListState } from '../Recoil/atom';\r\n\r\nconst { Option } = Select;\r\n\r\ninterface Props {\r\n  formIndex: number;\r\n  modelIndex: number;\r\n}\r\n\r\nexport const ModelsForm: React.FC<Props> = (props: Props) => {\r\n  const [modelsList, setModelsList] = useRecoilState(modelsListState)\r\n\r\n  const changeKeyHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setModelsList((prev) => {\r\n      const prevContent = prev[props.formIndex].contents;\r\n      return prev.slice(0, props.formIndex).concat([{ name: prev[props.formIndex].name, id: prev[props.formIndex].id, contents: prevContent.slice(0, props.modelIndex).concat({ key: e.target.value, isArray: prevContent[props.modelIndex].isArray, type: prevContent[props.modelIndex].type }).concat(prevContent.slice(props.modelIndex + 1, prevContent.length)) }]).concat(prev.slice((props.formIndex + 1), prev.length));\r\n    })\r\n  }\r\n\r\n  const changeTypeHandler = (val: InputTypes | string) => {\r\n    setModelsList((prev) => {\r\n      const prevContent = prev[props.formIndex].contents;\r\n      return prev.slice(0, props.formIndex).concat([{ name: prev[props.formIndex].name, id: prev[props.formIndex].id, contents: prevContent.slice(0, props.modelIndex).concat({ key: prevContent[props.modelIndex].key, isArray: prevContent[props.modelIndex].isArray, type: val }).concat(prevContent.slice(props.modelIndex + 1, prevContent.length)) }]).concat(prev.slice((props.formIndex + 1), prev.length));\r\n    })\r\n  }\r\n\r\n  const changeIsArrayHandler = (e: { target: { checked: boolean; }; }) => {\r\n    setModelsList((prev) => {\r\n      const prevContent = prev[props.formIndex].contents;\r\n      return prev.slice(0, props.formIndex).concat([{ name: prev[props.formIndex].name, id: prev[props.formIndex].id, contents: prevContent.slice(0, props.modelIndex).concat({ key: prevContent[props.modelIndex].key, isArray: e.target.checked, type: prevContent[props.modelIndex].type }).concat(prevContent.slice(props.modelIndex + 1, prevContent.length)) }]).concat(prev.slice((props.formIndex + 1), prev.length));\r\n    })\r\n  }\r\n\r\n  const deleteObjectHandler = () => {\r\n    setModelsList((prev) => {\r\n      const prevContent = prev[props.formIndex].contents;\r\n      return prev.slice(0, props.formIndex).concat({ name: prev[props.formIndex].name, id: prev[props.formIndex].id, contents: prevContent.slice(0, props.modelIndex).concat(prevContent.slice(props.modelIndex + 1, prevContent.length)) }).concat(prev.slice((props.formIndex + 1), prev.length));\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"models-form\">\r\n      <Input className=\"models-form__input\" placeholder=\"Key\" value={modelsList[props.formIndex].contents[props.modelIndex].key} onChange={changeKeyHandler}></Input>\r\n      <Select className=\"models-form__select\" value={modelsList[props.formIndex].contents[props.modelIndex].type} defaultValue={InputTypes.string} onChange={changeTypeHandler}>\r\n        <Option value={InputTypes.string}>{InputTypes.string}</Option>\r\n        <Option value={InputTypes.number}>{InputTypes.number}</Option>\r\n        <Option value={InputTypes.boolean}>{InputTypes.boolean}</Option>\r\n        {modelsList.map((_, i) => {\r\n          return (\r\n            (props.formIndex !== i) ? (<Option value={modelsList[i].id}>{modelsList[i].name}</Option>) : (<></>)\r\n          )\r\n        })}\r\n      </Select>\r\n      <Checkbox className=\"models-form__checkbox\" checked={modelsList[props.formIndex].contents[props.modelIndex].isArray} onChange={changeIsArrayHandler}></Checkbox>\r\n      <Button danger className=\"models-form__button\" onClick={deleteObjectHandler}>\r\n        <CloseOutlined />\r\n      </Button>\r\n    </div >\r\n  )\r\n}","import React, { useState } from 'react';\r\nimport { Button, Input } from 'antd';\r\nimport { CloseOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { ModelsForm } from './ModelsForm';\r\nimport { useRecoilState } from 'recoil';\r\nimport { modelsListState } from '../Recoil/atom';\r\nimport '../Styles/models-tab.scss';\r\nimport { InputTypes } from '../Types';\r\n\r\ninterface Props {\r\n  formIndex: number;\r\n}\r\n\r\nexport const ModelsFormList: React.FC<Props> = (props: Props) => {\r\n  const [modelsList, setModelsList] = useRecoilState(modelsListState);\r\n  const [modelNameState, setModelNameState] = useState(false);\r\n\r\n  const addFormHandler = () => {\r\n    setModelsList((prev) => {\r\n      return prev.slice(0, props.formIndex).concat([{ name: prev[props.formIndex].name, id: prev[props.formIndex].id, contents: [...prev[props.formIndex].contents, { key: \"\", isArray: false, type: InputTypes.string }] }]).concat(prev.slice((props.formIndex + 1), prev.length));\r\n    });\r\n  }\r\n\r\n  const deleteObjectHandler = () => {\r\n    if (modelsList.find((e) => e.contents.find((v) => v.type === modelsList[props.formIndex].id)) === undefined) {\r\n      setModelsList((prev) => {\r\n        return prev.slice(0, props.formIndex).concat(prev.slice((props.formIndex + 1), prev.length));\r\n      });\r\n    }\r\n  }\r\n\r\n  const blurModelNameInput = (e: React.FocusEvent<HTMLInputElement>) => {\r\n    setModelNameState(false);\r\n    setModelsList((prev) => {\r\n      return prev.slice(0, props.formIndex).concat([{ name: e.target.value, id: prev[props.formIndex].id, contents: prev[props.formIndex].contents }]).concat(prev.slice((props.formIndex + 1), prev.length));\r\n    });\r\n  }\r\n\r\n  const SwitchModelName: React.FC = () => {\r\n    if (modelNameState) {\r\n      return <Input placeholder=\"Model Name\" defaultValue={modelsList[props.formIndex].name} onBlur={(e) => blurModelNameInput(e)}></Input>\r\n    } else {\r\n      return <text onClick={(_) => setModelNameState(true)}>{modelsList[props.formIndex].name}</text>\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"models-tab\">\r\n      <SwitchModelName></SwitchModelName>\r\n      {modelsList[props.formIndex].contents.map((_, i) => {\r\n        return (\r\n          <ModelsForm formIndex={props.formIndex} modelIndex={i}></ModelsForm>\r\n        )\r\n      }\r\n      )}\r\n      <Button className=\"models-tab__button\" onClick={addFormHandler}>\r\n        <PlusOutlined />\r\n      </Button>\r\n      <Button danger className=\"models-form__button\" onClick={deleteObjectHandler}>\r\n        <CloseOutlined />\r\n      </Button>\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport { Button } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport { ModelsFormList } from './ModelsFormList';\r\nimport { useRecoilState } from 'recoil';\r\nimport { modelsListState } from '../Recoil/atom';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport '../Styles/models-tab.scss';\r\n\r\nexport const ModelsTab: React.FC = () => {\r\n  const [modelsList, setModelsList] = useRecoilState(modelsListState)\r\n\r\n  const addObjectHandler = () => {\r\n    setModelsList((prev) => {\r\n      return prev.concat({ name: \"model\", id: uuidv4(), contents: [] });\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"models-tab\">\r\n      {modelsList.map((_, i) => {\r\n        return (\r\n          <ModelsFormList formIndex={i}></ModelsFormList>\r\n        )\r\n      }\r\n      )}\r\n      <Button className=\"models-tab__button\" onClick={addObjectHandler}>\r\n        <PlusOutlined />\r\n      </Button>\r\n    </div>\r\n  )\r\n}","import React, { ChangeEvent, FocusEvent, useState } from 'react';\r\nimport { Button, Checkbox, Input, InputNumber, Select } from 'antd';\r\nimport { CloseOutlined } from '@ant-design/icons';\r\nimport { useRecoilState } from 'recoil';\r\nimport { modelsListState, objectsListState } from '../Recoil/atom';\r\nimport { InputTypes, IObjectsElem } from '../Types';\r\nimport { useRecoilValue } from 'recoil';\r\nimport '../Styles/objects-form.scss';\r\nimport { SelectValue } from 'antd/lib/select';\r\n\r\nconst { Option } = Select;\r\n\r\ninterface Props {\r\n  formIndex: number;\r\n}\r\n\r\nexport const ObjectsForm: React.FC<Props> = (props: Props) => {\r\n  const modelsList = useRecoilValue(modelsListState);\r\n  const [objectsList, setObjectsList] = useRecoilState(objectsListState);\r\n  const [objectNameState, setObjectNameState] = useState(false);\r\n\r\n\r\n  const deleteObjectsFormList = () => {\r\n    setObjectsList((prev) => {\r\n      return prev.slice(0, props.formIndex).concat(prev.slice((props.formIndex + 1), prev.length));\r\n    })\r\n  }\r\n\r\n  const changeModelTemplate = (v: string) => {\r\n    setObjectsList((prev) => {\r\n      const model = modelsList.find((e) => e.id === v);\r\n      let object: IObjectsElem[] = [];\r\n      model?.contents.map((e) => {\r\n        object.push({ key: e.key, type: e.type, isArray: e.isArray, value: [\"\"] });\r\n        return true;\r\n      })\r\n      return prev.slice(0, props.formIndex).concat({ name: prev[props.formIndex].name, id: prev[props.formIndex].id, modelId: v, contents: object }).concat(prev.slice(props.formIndex + 1, prev.length));\r\n    })\r\n  }\r\n\r\n  const changeArraySize = (v: string | number | undefined, i: number) => {\r\n    setObjectsList((prev) => {\r\n      if (Number(v) === prev[props.formIndex].contents[i].value.length) {\r\n        return prev;\r\n      } else if (Number(v) < prev[props.formIndex].contents[i].value.length) {\r\n        const prevModel = prev[props.formIndex].contents[i];\r\n        return prev.slice(0, props.formIndex).concat({\r\n          name: prev[props.formIndex].name,\r\n          id: prev[props.formIndex].id,\r\n          modelId: prev[props.formIndex].modelId,\r\n          contents: prev[props.formIndex].contents.slice(0, i).concat({\r\n            key: prevModel.key,\r\n            type: prevModel.type,\r\n            isArray: prevModel.isArray,\r\n            value: prevModel.value.slice(0, Number(v))\r\n          }).concat(prev[props.formIndex].contents.slice(i + 1, prev[props.formIndex].contents.length))\r\n        }).concat(prev.slice(props.formIndex + 1, prev.length));\r\n      } else {\r\n        const prevModel = prev[props.formIndex].contents[i];\r\n        let addObj: Array<string | number | boolean> = Array<string | number | boolean>();\r\n        [...Array(Number(v) - prev[props.formIndex].contents[i].value.length)].forEach((_) => addObj.push(\"\"));\r\n        return prev.slice(0, props.formIndex).concat({\r\n          name: prev[props.formIndex].name,\r\n          id: prev[props.formIndex].id,\r\n          modelId: prev[props.formIndex].modelId,\r\n          contents: prev[props.formIndex].contents.slice(0, i).concat({\r\n            key: prevModel.key,\r\n            type: prevModel.type,\r\n            isArray: prevModel.isArray,\r\n            value: prevModel.value.concat(addObj)\r\n          }).concat(prev[props.formIndex].contents.slice(i + 1, prev[props.formIndex].contents.length))\r\n        }).concat(prev.slice(props.formIndex + 1, prev.length));\r\n      }\r\n    });\r\n  }\r\n\r\n  const changeStringInputValue = (e: ChangeEvent<HTMLInputElement>, i: number, index: number) => {\r\n    setObjectsList((prev) => {\r\n      const prevModel = prev[props.formIndex].contents[i];\r\n      return prev.slice(0, props.formIndex).concat({\r\n        name: prev[props.formIndex].name,\r\n        id: prev[props.formIndex].id,\r\n        modelId: prev[props.formIndex].modelId,\r\n        contents: prev[props.formIndex].contents.slice(0, i).concat({\r\n          key: prevModel.key,\r\n          type: prevModel.type,\r\n          isArray: prevModel.isArray,\r\n          value: prevModel.value.slice(0, index).concat(e.target.value).concat(prevModel.value.slice(index + 1, prevModel.value.length))\r\n        }).concat(prev[props.formIndex].contents.slice(i + 1, prev[props.formIndex].contents.length))\r\n      }).concat(prev.slice(props.formIndex + 1, prev.length));\r\n    })\r\n  }\r\n\r\n  const changeNumberInputValue = (e: FocusEvent<HTMLInputElement>, i: number, index: number) => {\r\n    setObjectsList((prev) => {\r\n      const prevModel = prev[props.formIndex].contents[i];\r\n      return prev.slice(0, props.formIndex).concat({\r\n        name: prev[props.formIndex].name,\r\n        id: prev[props.formIndex].id,\r\n        modelId: prev[props.formIndex].modelId,\r\n        contents: prev[props.formIndex].contents.slice(0, i).concat({\r\n          key: prevModel.key,\r\n          type: prevModel.type,\r\n          isArray: prevModel.isArray,\r\n          value: prevModel.value.slice(0, index).concat(Number(e.target.value)).concat(prevModel.value.slice(index + 1, prevModel.value.length))\r\n        }).concat(prev[props.formIndex].contents.slice(i + 1, prev[props.formIndex].contents.length))\r\n      }).concat(prev.slice(props.formIndex + 1, prev.length));\r\n    })\r\n  }\r\n\r\n  const changeBooleanInputValue = (e: { target: { checked: boolean; }; }, i: number, index: number) => {\r\n    setObjectsList((prev) => {\r\n      const prevModel = prev[props.formIndex].contents[i];\r\n      return prev.slice(0, props.formIndex).concat({\r\n        name: prev[props.formIndex].name,\r\n        id: prev[props.formIndex].id,\r\n        modelId: prev[props.formIndex].modelId,\r\n        contents: prev[props.formIndex].contents.slice(0, i).concat({\r\n          key: prevModel.key,\r\n          type: prevModel.type,\r\n          isArray: prevModel.isArray,\r\n          value: prevModel.value.slice(0, index).concat(e.target.checked).concat(prevModel.value.slice(index + 1, prevModel.value.length))\r\n        }).concat(prev[props.formIndex].contents.slice(i + 1, prev[props.formIndex].contents.length))\r\n      }).concat(prev.slice(props.formIndex + 1, prev.length));\r\n    })\r\n  }\r\n\r\n  const changeCustomInputValue = (v: SelectValue, i: number, index: number) => {\r\n    setObjectsList((prev) => {\r\n      const prevModel = prev[props.formIndex].contents[i];\r\n      return prev.slice(0, props.formIndex).concat({\r\n        name: prev[props.formIndex].name,\r\n        id: prev[props.formIndex].id,\r\n        modelId: prev[props.formIndex].modelId,\r\n        contents: prev[props.formIndex].contents.slice(0, i).concat({\r\n          key: prevModel.key,\r\n          type: prevModel.type,\r\n          isArray: prevModel.isArray,\r\n          value: prevModel.value.slice(0, index).concat(v.toString()).concat(prevModel.value.slice(index + 1, prevModel.value.length))\r\n        }).concat(prev[props.formIndex].contents.slice(i + 1, prev[props.formIndex].contents.length))\r\n      }).concat(prev.slice(props.formIndex + 1, prev.length));\r\n    })\r\n  }\r\n\r\n  const blurModelNameInput = (e: React.FocusEvent<HTMLInputElement>) => {\r\n    setObjectNameState(false);\r\n    setObjectsList((prev) => {\r\n      return prev.slice(0, props.formIndex).concat([{ name: e.target.value, id: prev[props.formIndex].id, modelId: prev[props.formIndex].modelId, contents: prev[props.formIndex].contents }]).concat(prev.slice((props.formIndex + 1), prev.length));\r\n    });\r\n  }\r\n\r\n  const SwitchObjectName: React.FC = () => {\r\n    if (objectNameState) {\r\n      return <Input placeholder=\"Model Name\" defaultValue={objectsList[props.formIndex].name} onBlur={(e) => blurModelNameInput(e)}></Input>\r\n    } else {\r\n      return <text onClick={(_) => setObjectNameState(true)}>{objectsList[props.formIndex].name}</text>\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"objects-form\">\r\n      <SwitchObjectName></SwitchObjectName>\r\n      <Select className=\"objects-form__select\" onChange={changeModelTemplate}>\r\n        {modelsList.map((_, i) => {\r\n          return (\r\n            <Option value={modelsList[i].id}>{modelsList[i].name}</Option>\r\n          );\r\n        })}\r\n      </Select>\r\n\r\n      {objectsList[props.formIndex].contents.map((e, i) => {\r\n        const ArraySize: React.FC = () => {\r\n          if (e.isArray) {\r\n            return (\r\n              <>\r\n                <label>ArraySize</label>\r\n                <InputNumber placeholder=\"Array Size\" min={0} value={e.value.length} onChange={(v) => changeArraySize(v, i)}></InputNumber>\r\n              </>\r\n            );\r\n          } else {\r\n            return <></>;\r\n          }\r\n        }\r\n\r\n        const InputField: React.FC<{ index: number }> = (ifProps: { index: number }) => {\r\n          if (e.type === InputTypes.string) {\r\n            return <Input placeholder=\"value\" defaultValue={objectsList[props.formIndex].contents[i].value[ifProps.index]?.toString()} onBlur={(e) => changeStringInputValue(e, i, ifProps.index)}></Input>;\r\n          } else if (e.type === InputTypes.number) {\r\n            return <InputNumber placeholder=\"value\" defaultValue={Number(objectsList[props.formIndex].contents[i].value[ifProps.index])} onBlur={(e) => changeNumberInputValue(e, i, ifProps.index)}></InputNumber>;\r\n          } else if (e.type === InputTypes.boolean) {\r\n            return <Checkbox defaultChecked={!!objectsList[props.formIndex].contents[i].value[ifProps.index]} onChange={(e) => changeBooleanInputValue(e, i, ifProps.index)}></Checkbox>;\r\n          } else {\r\n            const matchList = objectsList.filter((e) => e.modelId === objectsList[props.formIndex].contents[i].type);\r\n            return (\r\n              <Select onChange={(v) => changeCustomInputValue(v, i, ifProps.index)}>\r\n                {matchList.map((e) => {\r\n                  return <Option value={e.id}>{e.name}</Option>;\r\n                })}\r\n              </Select>\r\n            )\r\n          }\r\n        }\r\n\r\n        return (\r\n          <div>\r\n            <ArraySize></ArraySize>\r\n            <label>{e.key} : </label>\r\n            {e.value.map((_, index) => {\r\n              return (\r\n                <>\r\n                  <InputField index={index}></InputField>\r\n                </>\r\n              );\r\n            })}\r\n          </div>\r\n        )\r\n      }\r\n      )}\r\n      <Button danger className=\"objects-form__button\" onClick={deleteObjectsFormList}>\r\n        <CloseOutlined />\r\n      </Button>\r\n    </div >\r\n  )\r\n}","import React from 'react';\r\nimport { Button } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport { ObjectsForm } from './ObjectsForm';\r\nimport { useRecoilState } from 'recoil';\r\nimport { objectsListState } from '../Recoil/atom';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport '../Styles/objects-tab.scss';\r\n\r\nexport const ObjectsTab: React.FC = () => {\r\n  const [objectsList, setObjectsList] = useRecoilState(objectsListState);\r\n\r\n  const addObjectHandler = () => {\r\n    setObjectsList((prev) => {\r\n      return prev.concat({ name: \"Object\", id: uuidv4(), modelId: \"\", contents: [] });\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"objects-tab\">\r\n      {objectsList.map((_, i) => {\r\n        return (\r\n          <ObjectsForm formIndex={i}></ObjectsForm>\r\n        );\r\n      })}\r\n      <Button className=\"objects-tab__button\" onClick={addObjectHandler}>\r\n        <PlusOutlined />\r\n      </Button>\r\n    </div>\r\n  )\r\n}","import React, { useState } from 'react';\r\nimport { Button, Select, Input } from 'antd';\r\nimport { objectsListState } from '../Recoil/atom';\r\nimport { useRecoilValue } from 'recoil';\r\nimport { InputTypes, IObjectsList } from '../Types';\r\n\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\n\r\nexport const OutputTab: React.FC = () => {\r\n  const objectsList = useRecoilValue(objectsListState);\r\n  const [outputObj, setOutputObj] = useState<string>(\"\");\r\n  const [selectedObj, setSelectedObj] = useState<string>(\"\");\r\n  let indentCount = 0;\r\n\r\n  const changeSelectObject = (v: string) => {\r\n    setSelectedObj(v);\r\n  }\r\n\r\n  const output = () => {\r\n    setOutputObj(\"\");\r\n    indentCount = 0;\r\n    const obj = objectsList.find((e) => e.id === selectedObj);\r\n    (obj != null) ? searchObject(obj) : console.log(\"undefined\");\r\n  }\r\n\r\n  const searchObject = (obj: IObjectsList) => {\r\n    addCurlyBracesOpen();\r\n    obj.contents.forEach((e, i) => {\r\n      addIndent();\r\n      addKey(e.key);\r\n      switch (e.type) {\r\n        case InputTypes.string:\r\n          addString(e.value as string[], e.isArray);\r\n          if (i < obj.contents.length - 1) {\r\n            addComma();\r\n          }\r\n          addReturn();\r\n          break;\r\n        case InputTypes.number:\r\n          addNumber(e.value as number[], e.isArray);\r\n          if (i < obj.contents.length - 1) {\r\n            addComma();\r\n          }\r\n          addReturn();\r\n          break;\r\n        case InputTypes.boolean:\r\n          addBoolean(e.value as boolean[], e.isArray);\r\n          if (i < obj.contents.length - 1) {\r\n            addComma();\r\n          }\r\n          addReturn();\r\n          break;\r\n        default:\r\n          let tmp: IObjectsList[] = [];\r\n          e.value.forEach((v) => {\r\n            const finded = objectsList.find((v2) => v2.id === v);\r\n            if (finded != null) {\r\n              tmp.push(finded);\r\n            }\r\n          });\r\n          if (e.isArray) {\r\n            addSquireBracketsOpen();\r\n            tmp.forEach((v, i) => {\r\n              v != null ? searchObject(v) : console.log(\"undefined\");\r\n              if (i < tmp.length - 1) {\r\n                addComma();\r\n              }\r\n            })\r\n            addSquireBracketsClose();\r\n            if (i < obj.contents.length - 1) {\r\n              addComma();\r\n            }\r\n          } else {\r\n            tmp != null ? searchObject(tmp[0]) : console.log(\"undefined\");\r\n            if (i < obj.contents.length - 1) {\r\n              addComma();\r\n              addReturn();\r\n            }\r\n          }\r\n          break;\r\n      }\r\n    });\r\n    addCurlyBracesClose();\r\n  }\r\n\r\n  const addIndent = () => {\r\n    for (let i = 0; i < indentCount; i++) {\r\n      setOutputObj((prev) => prev + '  ');\r\n    }\r\n  }\r\n\r\n  const addBracketsOpen = (bracket: string) => {\r\n    setOutputObj((prev) => prev + bracket);\r\n  }\r\n\r\n  const addBracketsClose = (bracket: string) => {\r\n    setOutputObj((prev) => prev + bracket);\r\n  }\r\n\r\n  const addCurlyBracesOpen = () => {\r\n    addIndent();\r\n    addBracketsOpen(\"{\");\r\n    indentCount++;\r\n    addReturn();\r\n  }\r\n\r\n  const addCurlyBracesClose = () => {\r\n    indentCount--;\r\n    addIndent();\r\n    addBracketsClose(\"}\");\r\n  }\r\n\r\n  const addSquireBracketsOpen = () => {\r\n    addBracketsOpen(\"[\");\r\n  }\r\n\r\n  const addSquireBracketsClose = () => {\r\n    addBracketsClose(\"]\");\r\n  }\r\n\r\n  const addComma = () => {\r\n    setOutputObj((prev) => prev + \", \");\r\n  }\r\n\r\n  const addKey = (key: string) => {\r\n    setOutputObj((prev) => prev + `\"${key}\" : `);\r\n  }\r\n\r\n  const addReturn = () => {\r\n    setOutputObj((prev) => prev + \"\\n\");\r\n  }\r\n\r\n  const addString = (val: string[], isArray: boolean = false) => {\r\n    if (isArray) {\r\n      let tmp: string = \"\";\r\n      addSquireBracketsOpen();\r\n      val.forEach((e, i) => {\r\n        if (i < val.length - 1) {\r\n          tmp += `\"${e}\" ,`;\r\n        } else {\r\n          tmp += `\"${e}\"`;\r\n        }\r\n      })\r\n      setOutputObj((prev) => prev + tmp);\r\n      addSquireBracketsClose();\r\n    } else {\r\n      setOutputObj((prev) => prev + `\"${val[0]}\"`);\r\n    }\r\n  }\r\n\r\n  const addNumber = (val: number[], isArray: boolean = false) => {\r\n    if (isArray) {\r\n      let tmp: string = \"\";\r\n      addSquireBracketsOpen();\r\n      val.forEach((e, i) => {\r\n        if (i < val.length - 1) {\r\n          tmp += `${e} ,`;\r\n        } else {\r\n          tmp += `${e}`;\r\n        }\r\n      })\r\n      setOutputObj((prev) => prev + tmp);\r\n      addSquireBracketsClose();\r\n    } else {\r\n      setOutputObj((prev) => prev + `${val[0]}`);\r\n    }\r\n  }\r\n\r\n  const addBoolean = (val: boolean[], isArray: boolean = false) => {\r\n    if (isArray) {\r\n      let tmp: string = \"\";\r\n      addSquireBracketsOpen();\r\n      val.forEach((e, i) => {\r\n        if (i < val.length - 1) {\r\n          tmp += e ? \"true ,\" : \"false ,\";\r\n        } else {\r\n          tmp += e ? \"true\" : \"false\";\r\n        }\r\n      })\r\n      setOutputObj((prev) => prev + tmp);\r\n      addSquireBracketsClose();\r\n    } else {\r\n      setOutputObj((prev) => prev + (val[0] ? \"true\" : \"false\"));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"models-tab\">\r\n      <Select value={selectedObj} onChange={changeSelectObject}>\r\n        {objectsList.map((e) => {\r\n          return (\r\n            <Option value={e.id}>{e.name}</Option>\r\n          )\r\n        }\r\n        )}\r\n      </Select>\r\n      <Button onClick={output}>Output</Button>\r\n      <TextArea value={outputObj}></TextArea>\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport { Tabs } from 'antd';\r\nimport { ModelsTab } from './Components/ModelsTab';\r\nimport { ObjectsTab } from './Components/ObjectsTab';\r\nimport { OutputTab } from './Components/OutputTab';\r\nimport './App.css';\r\nimport 'antd/dist/antd.css';\r\nimport './Styles/header.scss';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"header\">\r\n        <h1 className=\"header__h1\">Json Formmatter</h1>\r\n      </header>\r\n      <div className=\"body\">\r\n        <Tabs defaultActiveKey=\"1\">\r\n          <TabPane tab=\"Models\" key=\"1\">\r\n            <ModelsTab></ModelsTab>\r\n          </TabPane>\r\n          <TabPane tab=\"Objects\" key=\"2\">\r\n            <ObjectsTab></ObjectsTab>\r\n          </TabPane>\r\n          <TabPane tab=\"Output\" key=\"3\">\r\n            <OutputTab></OutputTab>\r\n          </TabPane>\r\n        </Tabs>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { RecoilRoot } from 'recoil';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <RecoilRoot>\r\n      <App />\r\n    </RecoilRoot>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}