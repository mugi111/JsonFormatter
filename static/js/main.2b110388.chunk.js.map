{"version":3,"sources":["Types/index.ts","Recoil/atom/index.ts","Components/ModelsForm.tsx","Components/ModelsFormList.tsx","Components/ModelsTab.tsx","Components/ObjectsForm.tsx","Components/ObjectsTab.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["InputTypes","modelsListState","atom","key","default","objectsListState","Option","Select","ModelsForm","props","useRecoilState","modelsList","setModelsList","className","placeholder","value","formIndex","contents","modelIndex","onChange","e","prev","prevContent","slice","concat","name","id","target","isArray","type","length","defaultValue","string","val","number","boolean","map","_","i","checked","danger","onClick","CloseOutlined","ModelsFormList","useState","modelNameState","setModelNameState","SwitchModelName","onBlur","blurModelNameInput","PlusOutlined","undefined","find","v","ModelsTab","uuidv4","ObjectsForm","useRecoilValue","objectsList","setObjectsList","model","object","push","modelId","ArraySize","min","Number","prevModel","addObj","Array","forEach","changeArraySize","InputField","ifProps","index","toString","changeStringInputValue","changeNumberInputValue","defaultChecked","changeBooleanInputValue","matchList","filter","ObjectsTab","TabPane","Tabs","App","defaultActiveKey","tab","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2b110388.chunk.js","sourcesContent":["export enum InputTypes {\r\n  string = \"String\",\r\n  number = \"Number\",\r\n  boolean = \"Boolean\",\r\n}\r\n\r\nexport interface IModelsElem {\r\n  key: string;\r\n  isArray: boolean;\r\n  type: InputTypes | number;\r\n}\r\n\r\nexport interface IModelsListBase {\r\n  name: string;\r\n  id: string;\r\n}\r\n\r\nexport interface IModelsList extends IModelsListBase {\r\n  contents: IModelsElem[];\r\n}\r\n\r\nexport interface IObjectsElem extends IModelsElem {\r\n  // key: string;\r\n  // isArray: boolean;\r\n  // type: InputTypes | number;\r\n  value: Array<string | number | boolean>;\r\n}\r\n\r\nexport interface IObjectsList extends IModelsListBase {\r\n  modelId: string;\r\n  contents: IObjectsElem[];\r\n}","import { atom } from 'recoil';\r\nimport { IModelsList, IObjectsList } from '../../Types';\r\n\r\nexport const modelsListState = atom<IModelsList[]>({\r\n  key: \"modelsList\",\r\n  default: [],\r\n});\r\n\r\nexport const objectsListState = atom<IObjectsList[]>({\r\n  key: \"objectsList\",\r\n  default: [],\r\n})","import React from 'react';\r\nimport { Button, Checkbox, Input, Select } from 'antd';\r\nimport { InputTypes } from '../Types';\r\nimport '../Styles/models-form.scss';\r\nimport { CloseOutlined } from '@ant-design/icons';\r\nimport { useRecoilState } from 'recoil';\r\nimport { modelsListState } from '../Recoil/atom';\r\n\r\nconst { Option } = Select;\r\n\r\ninterface Props {\r\n  formIndex: number;\r\n  modelIndex: number;\r\n}\r\n\r\nexport const ModelsForm: React.FC<Props> = (props: Props) => {\r\n  const [modelsList, setModelsList] = useRecoilState(modelsListState)\r\n\r\n  const changeKeyHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setModelsList((prev) => {\r\n      const prevContent = prev[props.formIndex].contents;\r\n      return prev.slice(0, props.formIndex).concat([{ name: prev[props.formIndex].name, id: prev[props.formIndex].id, contents: prevContent.slice(0, props.modelIndex).concat({ key: e.target.value, isArray: prevContent[props.modelIndex].isArray, type: prevContent[props.modelIndex].type }).concat(prevContent.slice(props.modelIndex + 1, prevContent.length)) }]).concat(prev.slice((props.formIndex + 1), prev.length));\r\n    })\r\n  }\r\n\r\n  const changeTypeHandler = (val: InputTypes | number) => {\r\n    setModelsList((prev) => {\r\n      const prevContent = prev[props.formIndex].contents;\r\n      return prev.slice(0, props.formIndex).concat([{ name: prev[props.formIndex].name, id: prev[props.formIndex].id, contents: prevContent.slice(0, props.modelIndex).concat({ key: prevContent[props.modelIndex].key, isArray: prevContent[props.modelIndex].isArray, type: val }).concat(prevContent.slice(props.modelIndex + 1, prevContent.length)) }]).concat(prev.slice((props.formIndex + 1), prev.length));\r\n    })\r\n  }\r\n\r\n  const changeIsArrayHandler = (e: { target: { checked: boolean; }; }) => {\r\n    setModelsList((prev) => {\r\n      const prevContent = prev[props.formIndex].contents;\r\n      return prev.slice(0, props.formIndex).concat([{ name: prev[props.formIndex].name, id: prev[props.formIndex].id, contents: prevContent.slice(0, props.modelIndex).concat({ key: prevContent[props.modelIndex].key, isArray: e.target.checked, type: prevContent[props.modelIndex].type }).concat(prevContent.slice(props.modelIndex + 1, prevContent.length)) }]).concat(prev.slice((props.formIndex + 1), prev.length));\r\n    })\r\n  }\r\n\r\n  const deleteObjectHandler = () => {\r\n    setModelsList((prev) => {\r\n      const prevContent = prev[props.formIndex].contents;\r\n      return prev.slice(0, props.formIndex).concat({ name: prev[props.formIndex].name, id: prev[props.formIndex].id, contents: prevContent.slice(0, props.modelIndex).concat(prevContent.slice(props.modelIndex + 1, prevContent.length)) }).concat(prev.slice((props.formIndex + 1), prev.length));\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"models-form\">\r\n      <Input className=\"models-form__input\" placeholder=\"Key\" value={modelsList[props.formIndex].contents[props.modelIndex].key} onChange={changeKeyHandler}></Input>\r\n      <Select className=\"models-form__select\" value={modelsList[props.formIndex].contents[props.modelIndex].type} defaultValue={InputTypes.string} onChange={changeTypeHandler}>\r\n        <Option value={InputTypes.string}>{InputTypes.string}</Option>\r\n        <Option value={InputTypes.number}>{InputTypes.number}</Option>\r\n        <Option value={InputTypes.boolean}>{InputTypes.boolean}</Option>\r\n        {modelsList.map((_, i) => {\r\n          return (\r\n            (props.formIndex !== i) ? (<Option value={modelsList[i].id}>{modelsList[i].id}</Option>) : (<></>)\r\n          )\r\n        })}\r\n      </Select>\r\n      <Checkbox className=\"models-form__checkbox\" checked={modelsList[props.formIndex].contents[props.modelIndex].isArray} onChange={changeIsArrayHandler}></Checkbox>\r\n      <Button danger className=\"models-form__button\" onClick={deleteObjectHandler}>\r\n        <CloseOutlined />\r\n      </Button>\r\n    </div >\r\n  )\r\n}","import React, { useState } from 'react';\r\nimport { Button, Input } from 'antd';\r\nimport { CloseOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { ModelsForm } from './ModelsForm';\r\nimport { useRecoilState } from 'recoil';\r\nimport { modelsListState } from '../Recoil/atom';\r\nimport '../Styles/models-tab.scss';\r\nimport { InputTypes } from '../Types';\r\n\r\ninterface Props {\r\n  formIndex: number;\r\n}\r\n\r\nexport const ModelsFormList: React.FC<Props> = (props: Props) => {\r\n  const [modelsList, setModelsList] = useRecoilState(modelsListState);\r\n  const [modelNameState, setModelNameState] = useState(false);\r\n\r\n  const addFormHandler = () => {\r\n    setModelsList((prev) => {\r\n      return prev.slice(0, props.formIndex).concat([{ name: prev[props.formIndex].name, id: prev[props.formIndex].id, contents: [...prev[props.formIndex].contents, { key: \"\", isArray: false, type: InputTypes.string }] }]).concat(prev.slice((props.formIndex + 1), prev.length));\r\n    });\r\n  }\r\n\r\n  const deleteObjectHandler = () => {\r\n    if (modelsList.find((e) => e.contents.find((v) => v.type === modelsList[props.formIndex].id)) === undefined) {\r\n      setModelsList((prev) => {\r\n        return prev.slice(0, props.formIndex).concat(prev.slice((props.formIndex + 1), prev.length));\r\n      });\r\n    }\r\n  }\r\n\r\n  const blurModelNameInput = (e: React.FocusEvent<HTMLInputElement>) => {\r\n    setModelNameState(false);\r\n    setModelsList((prev) => {\r\n      return prev.slice(0, props.formIndex).concat([{ name: e.target.value, id: prev[props.formIndex].id, contents: prev[props.formIndex].contents }]).concat(prev.slice((props.formIndex + 1), prev.length));\r\n    });\r\n  }\r\n\r\n  const SwitchModelName: React.FC = () => {\r\n    if (modelNameState) {\r\n      return <Input placeholder=\"Model Name\" defaultValue={modelsList[props.formIndex].name} onBlur={(e) => blurModelNameInput(e)}></Input>\r\n    } else {\r\n      return <text onClick={(_) => setModelNameState(true)}>{modelsList[props.formIndex].name}</text>\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"models-tab\">\r\n      <SwitchModelName></SwitchModelName>\r\n      {modelsList[props.formIndex].contents.map((_, i) => {\r\n        return (\r\n          <ModelsForm formIndex={props.formIndex} modelIndex={i}></ModelsForm>\r\n        )\r\n      }\r\n      )}\r\n      <Button className=\"models-tab__button\" onClick={addFormHandler}>\r\n        <PlusOutlined />\r\n      </Button>\r\n      <Button danger className=\"models-form__button\" onClick={deleteObjectHandler}>\r\n        <CloseOutlined />\r\n      </Button>\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport { Button } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport { ModelsFormList } from './ModelsFormList';\r\nimport { useRecoilState } from 'recoil';\r\nimport { modelsListState } from '../Recoil/atom';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport '../Styles/models-tab.scss';\r\n\r\nexport const ModelsTab: React.FC = () => {\r\n  const [modelsList, setModelsList] = useRecoilState(modelsListState)\r\n\r\n  const addObjectHandler = () => {\r\n    setModelsList((prev) => {\r\n      return prev.concat({ name: \"model\", id: uuidv4(), contents: [] });\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"models-tab\">\r\n      {modelsList.map((_, i) => {\r\n        return (\r\n          <ModelsFormList formIndex={i}></ModelsFormList>\r\n        )\r\n      }\r\n      )}\r\n      <Button className=\"models-tab__button\" onClick={addObjectHandler}>\r\n        <PlusOutlined />\r\n      </Button>\r\n    </div>\r\n  )\r\n}","import React, { ChangeEvent, FocusEvent } from 'react';\r\nimport { Button, Checkbox, Input, InputNumber, Select } from 'antd';\r\nimport { CloseOutlined } from '@ant-design/icons';\r\nimport { useRecoilState } from 'recoil';\r\nimport { modelsListState, objectsListState } from '../Recoil/atom';\r\nimport { InputTypes, IObjectsElem } from '../Types';\r\nimport { useRecoilValue } from 'recoil';\r\nimport '../Styles/objects-form.scss';\r\n\r\nconst { Option } = Select;\r\n\r\ninterface Props {\r\n  formIndex: number;\r\n}\r\n\r\nexport const ObjectsForm: React.FC<Props> = (props: Props) => {\r\n  const modelsList = useRecoilValue(modelsListState);\r\n  const [objectsList, setObjectsList] = useRecoilState(objectsListState);\r\n\r\n  const deleteObjectsFormList = () => {\r\n    setObjectsList((prev) => {\r\n      return prev.slice(0, props.formIndex).concat(prev.slice((props.formIndex + 1), prev.length));\r\n    })\r\n  }\r\n\r\n  const changeModelTemplate = (v: string) => {\r\n    setObjectsList((prev) => {\r\n      const model = modelsList.find((e) => e.id === v);\r\n      let object: IObjectsElem[] = [];\r\n      model?.contents.map((e) => {\r\n        object.push({ key: e.key, type: e.type, isArray: e.isArray, value: [\"\"] });\r\n        return true;\r\n      })\r\n      return prev.slice(0, props.formIndex).concat({ name: prev[props.formIndex].name, id: prev[props.formIndex].id, modelId: v, contents: object }).concat(prev.slice(props.formIndex + 1, prev.length));\r\n    })\r\n  }\r\n\r\n  const changeArraySize = (v: string | number | undefined, i: number) => {\r\n    setObjectsList((prev) => {\r\n      if (Number(v) === prev[props.formIndex].contents[i].value.length) {\r\n        return prev;\r\n      } else if (Number(v) < prev[props.formIndex].contents[i].value.length) {\r\n        const prevModel = prev[props.formIndex].contents[i];\r\n        return prev.slice(0, props.formIndex).concat({\r\n          name: prev[props.formIndex].name,\r\n          id: prev[props.formIndex].id,\r\n          modelId: prev[props.formIndex].modelId,\r\n          contents: prev[props.formIndex].contents.slice(0, i).concat({\r\n            key: prevModel.key,\r\n            type: prevModel.type,\r\n            isArray: prevModel.isArray,\r\n            value: prevModel.value.slice(0, Number(v))\r\n          }).concat(prev[props.formIndex].contents.slice(i + 1, prev[props.formIndex].contents.length))\r\n        }).concat(prev.slice(props.formIndex + 1, prev.length));\r\n      } else {\r\n        const prevModel = prev[props.formIndex].contents[i];\r\n        let addObj: Array<string | number | boolean> = Array<string | number | boolean>();\r\n        [...Array(Number(v) - prev[props.formIndex].contents[i].value.length)].forEach((_) => addObj.push(\"\"));\r\n        return prev.slice(0, props.formIndex).concat({\r\n          name: prev[props.formIndex].name,\r\n          id: prev[props.formIndex].id,\r\n          modelId: prev[props.formIndex].modelId,\r\n          contents: prev[props.formIndex].contents.slice(0, i).concat({\r\n            key: prevModel.key,\r\n            type: prevModel.type,\r\n            isArray: prevModel.isArray,\r\n            value: prevModel.value.concat(addObj)\r\n          }).concat(prev[props.formIndex].contents.slice(i + 1, prev[props.formIndex].contents.length))\r\n        }).concat(prev.slice(props.formIndex + 1, prev.length));\r\n      }\r\n    });\r\n  }\r\n\r\n  const changeStringInputValue = (e: ChangeEvent<HTMLInputElement>, i: number, index: number) => {\r\n    setObjectsList((prev) => {\r\n      const prevModel = prev[props.formIndex].contents[i];\r\n      return prev.slice(0, props.formIndex).concat({\r\n        name: prev[props.formIndex].name,\r\n        id: prev[props.formIndex].id,\r\n        modelId: prev[props.formIndex].modelId,\r\n        contents: prev[props.formIndex].contents.slice(0, i).concat({\r\n          key: prevModel.key,\r\n          type: prevModel.type,\r\n          isArray: prevModel.isArray,\r\n          value: prevModel.value.slice(0, index).concat(e.target.value).concat(prevModel.value.slice(index + 1, prevModel.value.length))\r\n        }).concat(prev[props.formIndex].contents.slice(i + 1, prev[props.formIndex].contents.length))\r\n      }).concat(prev.slice(props.formIndex + 1, prev.length));\r\n    })\r\n  }\r\n\r\n  const changeNumberInputValue = (e: FocusEvent<HTMLInputElement>, i: number, index: number) => {\r\n    setObjectsList((prev) => {\r\n      const prevModel = prev[props.formIndex].contents[i];\r\n      return prev.slice(0, props.formIndex).concat({\r\n        name: prev[props.formIndex].name,\r\n        id: prev[props.formIndex].id,\r\n        modelId: prev[props.formIndex].modelId,\r\n        contents: prev[props.formIndex].contents.slice(0, i).concat({\r\n          key: prevModel.key,\r\n          type: prevModel.type,\r\n          isArray: prevModel.isArray,\r\n          value: prevModel.value.slice(0, index).concat(Number(e.target.value)).concat(prevModel.value.slice(index + 1, prevModel.value.length))\r\n        }).concat(prev[props.formIndex].contents.slice(i + 1, prev[props.formIndex].contents.length))\r\n      }).concat(prev.slice(props.formIndex + 1, prev.length));\r\n    })\r\n  }\r\n\r\n  const changeBooleanInputValue = (e: { target: { checked: boolean; }; }, i: number, index: number) => {\r\n    setObjectsList((prev) => {\r\n      const prevModel = prev[props.formIndex].contents[i];\r\n      return prev.slice(0, props.formIndex).concat({\r\n        name: prev[props.formIndex].name,\r\n        id: prev[props.formIndex].id,\r\n        modelId: prev[props.formIndex].modelId,\r\n        contents: prev[props.formIndex].contents.slice(0, i).concat({\r\n          key: prevModel.key,\r\n          type: prevModel.type,\r\n          isArray: prevModel.isArray,\r\n          value: prevModel.value.slice(0, index).concat(e.target.checked).concat(prevModel.value.slice(index + 1, prevModel.value.length))\r\n        }).concat(prev[props.formIndex].contents.slice(i + 1, prev[props.formIndex].contents.length))\r\n      }).concat(prev.slice(props.formIndex + 1, prev.length));\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"objects-form\">\r\n      <h3>{objectsList[props.formIndex].name}</h3>\r\n      <Select className=\"objects-form__select\" onChange={changeModelTemplate}>\r\n        {modelsList.map((_, i) => {\r\n          return (\r\n            <Option value={modelsList[i].id}>{modelsList[i].name}</Option>\r\n          );\r\n        })}\r\n      </Select>\r\n\r\n      {objectsList[props.formIndex].contents.map((e, i) => {\r\n        const ArraySize: React.FC = () => {\r\n          if (e.isArray) {\r\n            return (\r\n              <>\r\n                <label>ArraySize</label>\r\n                <InputNumber placeholder=\"Array Size\" min={0} value={e.value.length} onChange={(v) => changeArraySize(v, i)}></InputNumber>\r\n              </>\r\n            );\r\n          } else {\r\n            return <></>;\r\n          }\r\n        }\r\n\r\n        const InputField: React.FC<{ index: number }> = (ifProps: { index: number }) => {\r\n          if (e.type === InputTypes.string) {\r\n            return <Input placeholder=\"value\" defaultValue={objectsList[props.formIndex].contents[i].value[ifProps.index]?.toString()} onBlur={(e) => changeStringInputValue(e, i, ifProps.index)}></Input>;\r\n          } else if (e.type === InputTypes.number) {\r\n            return <InputNumber placeholder=\"value\" defaultValue={Number(objectsList[props.formIndex].contents[i].value[ifProps.index])} onBlur={(e) => changeNumberInputValue(e, i, ifProps.index)}></InputNumber>;\r\n          } else if (e.type === InputTypes.boolean) {\r\n            return <Checkbox defaultChecked={!!objectsList[props.formIndex].contents[i].value[ifProps.index]} onChange={(e) => changeBooleanInputValue(e, i, ifProps.index)}></Checkbox>;\r\n          } else {\r\n            const matchList = objectsList.filter((e) => e.modelId === objectsList[props.formIndex].contents[i].type);\r\n            return (\r\n              <Select>\r\n                {matchList.map((e) => {\r\n                  return <Option value={e.id}>{e.name}</Option>;\r\n                })}\r\n              </Select>\r\n            )\r\n          }\r\n        }\r\n\r\n        return (\r\n          <div>\r\n            <ArraySize></ArraySize>\r\n            <label>{e.key} : </label>\r\n            {e.value.map((_, index) => {\r\n              return (\r\n                <>\r\n                  <InputField index={index}></InputField>\r\n                </>\r\n              );\r\n            })}\r\n          </div>\r\n        )\r\n      }\r\n      )}\r\n      <Button danger className=\"objects-form__button\" onClick={deleteObjectsFormList}>\r\n        <CloseOutlined />\r\n      </Button>\r\n    </div >\r\n  )\r\n}","import React from 'react';\r\nimport { Button } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport { ObjectsForm } from './ObjectsForm';\r\nimport { useRecoilState } from 'recoil';\r\nimport { objectsListState } from '../Recoil/atom';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport '../Styles/objects-tab.scss';\r\n\r\nexport const ObjectsTab: React.FC = () => {\r\n  const [objectsList, setObjectsList] = useRecoilState(objectsListState);\r\n\r\n  const addObjectHandler = () => {\r\n    setObjectsList((prev) => {\r\n      return prev.concat({ name: \"Object\", id: uuidv4(), modelId: \"\", contents: [] });\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"objects-tab\">\r\n      {objectsList.map((_, i) => {\r\n        return (\r\n          <ObjectsForm formIndex={i}></ObjectsForm>\r\n        );\r\n      })}\r\n      <Button className=\"objects-tab__button\" onClick={addObjectHandler}>\r\n        <PlusOutlined />\r\n      </Button>\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport { Tabs } from 'antd';\r\nimport { ModelsTab } from './Components/ModelsTab';\r\nimport 'antd/dist/antd.css';\r\nimport { ObjectsTab } from './Components/ObjectsTab';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Tabs defaultActiveKey=\"1\">\r\n        <TabPane tab=\"Models\" key=\"1\">\r\n          <ModelsTab></ModelsTab>\r\n        </TabPane>\r\n        <TabPane tab=\"Objects\" key=\"2\">\r\n          <ObjectsTab></ObjectsTab>\r\n        </TabPane>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);  \r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n}\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { RecoilRoot } from 'recoil';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <RecoilRoot>\r\n      <App />\r\n    </RecoilRoot>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}